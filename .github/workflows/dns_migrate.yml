name: Route53 Hosted Zone Migration

on:
  workflow_dispatch:
    inputs:
      domain_name:
        description: 'Domain to migrate'
        required: true
        default: 'devopsengg.xyz'

jobs:
  migrate-dns:
    runs-on: self-hosted  # or your custom label

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Export records from old hosted zone
      id: export
      run: |
        echo "Finding hosted zone ID..."
        HOSTED_ZONE_ID=$(aws route53 list-hosted-zones-by-name \
          --dns-name ${{ github.event.inputs.domain_name }} \
          --query "HostedZones[0].Id" --output text | cut -d'/' -f3)
        echo "OLD_ZONE_ID=$HOSTED_ZONE_ID" >> $GITHUB_ENV

        echo "Exporting records..."
        cli53 export --full ${{ github.event.inputs.domain_name }} > records.txt
        grep -v -E 'IN[[:space:]]+(NS|SOA)' records.txt > filtered_records.txt

    - name: Create new hosted zone
      id: create
      run: |
        echo "Creating new hosted zone..."
        NEW_ZONE_JSON=$(aws route53 create-hosted-zone \
          --name ${{ github.event.inputs.domain_name }} \
          --caller-reference "$(date +%s)" \
          --output json)

        NEW_ZONE_ID=$(echo $NEW_ZONE_JSON | jq -r '.HostedZone.Id' | cut -d'/' -f3)
        echo "NEW_ZONE_ID=$NEW_ZONE_ID" >> $GITHUB_ENV
        echo "Hosted Zone created: $NEW_ZONE_ID"
    
    - name: Create Route 53 Health Check
      id: health_check
      run: |
        echo "Creating health check for 54.196.223.69..."
        HEALTH_CHECK_ID=$(aws route53 create-health-check \
          --caller-reference "$(date +%s)" \
          --health-check-config '{
            "IPAddress": "54.196.223.69",
            "Port": 80,
            "Type": "HTTP",
            "ResourcePath": "/",
            "RequestInterval": 30,
            "FailureThreshold": 3
          }' \
          --query 'HealthCheck.Id' --output text)

        echo "HEALTH_CHECK_ID=$HEALTH_CHECK_ID" >> $GITHUB_ENV
        echo "Health check created: $HEALTH_CHECK_ID"



    - name: Import records into new hosted zone
      run: |
        echo "Importing records..."
        cli53 import --file filtered_records.txt --replace $NEW_ZONE_ID

    - name: Output new NS records
      run: |
        echo "Fetching new NS records..."
        aws route53 get-hosted-zone --id $NEW_ZONE_ID \
          --query 'DelegationSet.NameServers' \
          --output text
